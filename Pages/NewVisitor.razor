@page "/visitorlog/new"
@using System.ComponentModel.DataAnnotations
@using OpenVisitor.Contracts
@inject History History
@inject NavigationManager NavigationManager
@inject HttpClient Http;

<style>
.new-visitor-form {
    max-width: 600px;
}
.new-visitor-form .form-field {
    margin-bottom: 20px;
}
.new-visitor-form .form-field, .new-visitor-form .mdc-text-field {
    width: 100%;
}

</style>
<EditForm Model="Model" OnValidSubmit="SignIn">
    <DataAnnotationsValidator />

    <div class="mat-layout-grid mdc-layout-grid--align-left new-visitor-form">
        <div class="mdc-layout-grid__cell">
            <h4 class="mat-h5">New visitor</h4>
            <div class="form-field">
                <MatTextField @bind-Value="Model.Name" Label="Name"/>
                <ValidationMessage For="@(() => Model.Name)" />
            </div>
            <div class="form-field">
                <MatTextField @bind-Value="Model.Host" Label="Host"/>
                <ValidationMessage For="@(() => Model.Host)" />
            </div>
        </div>
        <div class="mdc-layout-grid__cell">

            <div class="align-right">
                <MatButton Outlined="true" ype="submit">Sign in visitor</MatButton>
                <MatButton Outlined="true" @onclick="History.Back">Cancel</MatButton>
            </div>

        </div>
    </div>
</EditForm>

@code {
    Visitor Model = new Visitor();

    async Task SignIn()
    {
        try
        {
            await Http.PostJsonAsync("api/visitors", Model);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
        NavigationManager.NavigateTo("/visitorlog");
    }
}